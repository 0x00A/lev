#!/usr/bin/env node
var fs = require('fs')
var pkg = require('./package.json')
var deepmerge = require('deepmerge')
var ui = require('./lib/ui')
var Tree = require('level-subtree')
var client = require('./lib/client')

var conn = client.connections['Default']

try {
  var settingsFile = utils.find('.lev');
  var defaults = JSON.parse(fs.readFileSync(settingsFile)) || {}
  argv = deepmerge(argv, defaults)
}
catch(ex) {

  if (ex.name === 'SyntaxError') {
    console.log('error parsing settings file [%s]', ex.message)
  }
}

var screen = ui.screen()
var output = ui.output(screen)
ui.output.log(pkg.name, 'version', pkg.version)
ui.output.log('level version', pkg.dependencies.level, '\n')

var query = {
  start: '',
  end: '',
  reverse: false,
  limit: -1
}


function isSublevel(key) {
  if (key[0] == '[' && key[key.length-1] == ']') {
    key = key.slice(1)
    key = key.slice(0, -1)
    return key
  }
  return
}

function render(keys) {

  var keylist = ui.keylist(screen, keys)
  var values = ui.values(screen)
  var bounce

  function selectSublevel(sublevel) {
    conn = conn.sublevel(sublevel)
    keys = []
    // runQuery(parent.manifest.sublevels[sublevel].sublevels)
    client.query('Default', query, render)
    return
  }

  function selectKey(key) {
    
    client.get('Default', key, function(err, value) {
      values.resetScroll()
      values.setContent(err || value)
      screen.render()
    })
  }

  keylist.on('scroll', function() {
    clearTimeout(bounce)
    bounce = setTimeout(function() {
      var key = keys[keylist.selected]
      if (!isSublevel(key)) {
        selectKey(key)
      }
    }, 150)
    
    //
    // main.setContent(formatMain({ fix: true }, data._user, main.width));
    //
  })

  var commandbar = ui.commandbar(screen, query)

  screen.on('keypress', function(ch, key) {
    if (screen.focused === keylist) {
      if (key.name === 'tab') {
        if (!key.shift) {
          screen.focusNext();
        } else {
          screen.focusPrev();
        }
        screen.render();
        return;
      }
      if (key.name === 'enter') {
        var key = keys[keylist.selected]
        var sub = isSublevel(key)
        if (sub) {
          selectSublevel(sub)
        }
      }
      if (key.name === 'escape') {
        process.exit(0)
      }
    }
  })

  screen.render()
  keylist.focus()
}

client.query('Default', query, render)
